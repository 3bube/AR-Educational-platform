/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Fochdog (https://sketchfab.com/bazyaev08)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cpu-ryzen-5-3600-249fb5e8c1e94686a2c2b1cd6df72bc5
Title: CPU Ryzen 5 3600
*/


import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei/native'
import { GLTF } from 'three-stdlib'


type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
  }
  materials: {
    DefaultMaterial: THREE.MeshStandardMaterial
  }
}


export default function Cpu(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF( require ( '../assets/Cpu.glb' ) ) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial.geometry}
            material={materials.DefaultMaterial}
            position={[0, -0.037, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </group>
  )
}


useGLTF.preload(require ( '../assets/Cpu.glb' ));